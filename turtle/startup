os.loadAPI("/APIs/trt")

rednet.open("right");

while true do
	local id, msg
	rednet.broadcast("status:ready")
	write("status:ready\n")
	repeat
		id, msg = rednet.receive()
		write(id .. ": " .. (msg or "<nil/false>") .. "\n")
	until (not (msg:find("status:") == 1)) -- leave loop if msg is no status update
	rednet.send(id, "ACK")
	rednet.broadcast("status:busy")
	write("status:busy\n")
	if (type(msg) == "string") then
		if (msg:find("helo:helo") == 1) then
			rednet.send(id, "helo:Mining Turtle")
			write("helo:Mining Turtle\n")
		elseif (msg:find("getInv") == 1) then
			trt.sendUpdate(id)
		elseif (msg:find("do ") == 1) then
			local tries = 5
			local success, res = pcall(loadstring("return " .. msg:sub(4)))
			res = "result:" .. (success and "true" or "false") .. (res and "," .. res or "")
			repeat
				rednet.send(id, res)
				write(res .. "\n")
				tries = tries - 1
				local rid, rmsg = rednet.receive(0.2)
			until (id == rid and rmsg == "ACK" or tries < 1)
		else
			local tries = 5
			repeat
				rednet.send(id, "result:false,unknown command: " .. msg);
				write("result:false,unknown command: " .. msg);
				tries = tries - 1
				local rid, rmsg = rednet.receive(0.2)
			until (id == rid and rmsg == "ACK" or tries < 1)
		end
	end
end