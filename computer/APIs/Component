version = "1.0"
name = "Component"
local log = Log.new(name .. ".log")

-- class Component
Component = {}
Component.__index = Component

function new(x, y, width, height)
	local tmp = {}
	setmetatable(tmp, Component)
	tmp.x, tmp.y = x or 1, y or 1
	tmp.width, tmp.height = width or 0, height or 0
	tmp.fgColor, tmp.bgColor = colors.lime, colors.red
	tmp.show = true

	function tmp:setParent(parent)
		self.parent = parent
	end

	function tmp:draw(out)
		_ = self.onDraw and self:onDraw(out)
	end

	function tmp:touch(x, y)
		-- if x, y defines a point inside the components bounds
		if (x >= self.x  and y >= self.y and x < self.x + self.width and y < self.y + self.height) then
			self:onTouch(x - self.x + 1, y - self.y + 1)
			self:onInteract(x - self.x + 1, y - self.y + 1)
		end
	end
	
	function tmp:click(button, x, y)
		-- if x, y defines a point inside the components bounds
		if (x >= self.x  and y >= self.y and x < self.x + self.width and y < self.y + self.height) then
			self:onClick(button, x - self.x, y - self.y)
			self:onInteract(x - self.x, y - self.y)
		end
	end
	
	function tmp:remove()
		-- remove component from parent
		if (self.id) then self.parent.comp[self.id] = nil end
		-- remove data related to parent
		self.id = nil
		self.parent = nil
	end
	
	--callbacks (overload to add functionality)
	function tmp:onTouch() end
	function tmp:onClick() end
	function tmp:onInteract() end
	
	return tmp
end
-- end class

log:write("version: " .. version)
