version = "1.0"

fgColor, bgColor = colors.lime, colors.red

-- class Window
Window = {}
Window.__index = Window

function new(out, title)
	local tmp = {}
	setmetatable(tmp, Window)
	tmp.title = title or ""
	tmp.mon = out
	tmp.width, tmp.height = 49, 15
	tmp.x, tmp.y = 1, 1
	tmp.fgColor, tmp.bgColor = fgColor, bgColor
	tmp.comp = {}
	return tmp
end

function Window:add(component)
	local i = 1
	while (self.comp[i]) do
		i = i + 1
	end
	self.comp[i] = component
	component:setParent(self)
end

function Window:nl(x)
	local y
	_, y = self.mon.getCursorPos();
	self.mon.setCursorPos(x or 1, y + 1);
end

function Window:clear()
	self.mon.clear();
	self.mon.setCursorPos(1, 1);
end

function Window:draw()
	function Window:vline()
		self.mon.write("+");
		for i = 1, self.width do self.mon.write("-") end
		self.mon.write("+")
		self:nl(self.x)
	end

	self.mon.setTextColor(self.fgColor)
	self.mon.setBackgroundColor(self.bgColor)
	self.mon.setCursorPos(self.x, self.y)
	self:vline()

	self.mon.write("| ")
	for i = 1, self.width - 2 do 
		if (i <= #self.title) then
			self.mon.write(self.title:sub(i, i))
		else
			self.mon.write(" ")
		end
	end
	self.mon.write(" |")
	self:nl(self.x)
	
	self:vline()
	for _ = 1, self.height do
		self.mon.write("|")
		for _ = 1, self.width do
			self.mon.write(" ")
		end
		self.mon.write("|")
		self:nl(self.x)
	end
	self:vline()
	_ = self.onDraw and self:onDraw(self.mon)
	for _, comp in ipairs(self.comp) do
		comp:draw(self.mon)
	end
end

function Window:loop()
	_ = self.onStart and self:onStart()
	while not self.exit do
		self:draw()
		e, p1, p2, p3, p4, p5 = os.pullEvent()
		if (e == "monitor_touch") then
			if (self.onTouch and self:onTouch(p1, p2, p3)) then
				for _, comp in ipairs(self.comp) do
					_ = comp.onTouch and comp:onTouch(p1, p2, p3)
				end
			end
		elseif (e == "mouse_click") then
			if (self.onClick and self:onClick(p1, p2, p3)) then
				for _, comp in ipairs(self.comp) do
					_ = comp.onClick and comp:onClick(p1, p2, p3)
				end
			end
		end
	end
	_ = self.onEnd and self:onEnd()
	self.exit = nil
end
-- end class

write("loaded API: Window - " .. version .. "\n")
