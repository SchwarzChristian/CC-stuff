-- class Window
Window = {}
Window.__index = Window

function new(out, title)
	local tmp = {}
	setmetatable(tmp, Window)
	tmp.title = title or ""
	tmp.mon = out
	tmp.width, tmp.height = 49, 15
	tmp.x, tmp.y = 1, 1
	textColor, bgColor = colors.lime, colors.red
	return tmp
end

function Window:nl(x)
	local y
	_, y = self.mon.getCursorPos();
	self.mon.setCursorPos(x or 1, y + 1);
end

function Window:clear()
	self.mon.clear();
	self.mon.setCursorPos(1, 1);
end

function Window:draw()
	function Window:vline()
		self.mon.write("+");
		for i = 1, self.width do self.mon.write("-") end
		self.mon.write("+")
		self:nl(self.x)
	end

	self.mon.setTextColor(textColor)
	self.mon.setBackgroundColor(bgColor)
	self.mon.setCursorPos(self.x, self.y)
	self:vline()

	self.mon.write("| ")
	for i = 1, self.width - 2 do 
		if (i <= #self.title) then
			self.mon.write(self.title:sub(i, i))
		else
			self.mon.write(" ")
		end
	end
	self.mon.write(" |")
	self:nl(self.x)
	
	self:vline()
	for _ = 1, self.height do
		self.mon.write("|")
		for _ = 1, self.width do
			self.mon.write(" ")
		end
		self.mon.write("|")
		self:nl(self.x)
	end
	self:vline()
	self.onDraw and self:onDraw()
end

function Window:loop()
	self.onStart and self:onStart()
	while not self.exit do
		self:draw()
		e, p1, p2, p3, p4, p5 = os.pullEvent()
		if (e == "monitor_touch") then
			if (self.onTouch and self:onTouch(p1, p2, p3)) then
				-- find components on touched position
			end
		elseif (e == "mouse_click") then
			if (self.onClick and self:onClick(p1, p2, p3)) then
				-- find components on touched position
			end
		end
	end
	self.onEnd and self:onEnd()
	self.exit = nil
end
-- end class Window

version = "1.0"

write("loaded API: window - " .. version .. "\n")

--[
do -- main
	w = new(peripheral.wrap("top"), "test")

	function w:onClick()
		self.exit = true
	end

	function w:onTouch()
		self.exit = true
	end

	w.mon.setTextScale(0.5);
	w:loop()
	w.mon:clear()
end
--]]
